cmake_minimum_required(VERSION 3.4.0)

project(lwip C)

set(LIB_NAME lwip)
set(PROJECT_MAJOR_VERSION 2)
set(PROJECT_MINOR_VERSION 0)
set(PROJECT_PATCH_VERSION 0)
set(PROJECT_VERSION  ${PROJECT_MAJOR_VERSION}.${PROJECT_MINOR_VERSION}.${PROJECT_PATCH_VERSION})

message(STATUS "")
message(STATUS "Running ${CMAKE_COMMAND} ${CMAKE_VERSION} on ${LIB_NAME} v${PROJECT_VERSION}" )
message(STATUS "EXECUTABLE_OUTPUT_PATH: ${EXECUTABLE_OUTPUT_PATH}")
message(STATUS "LIBRARY_OUTPUT_PATH: ${LIBRARY_OUTPUT_PATH}")
message(STATUS "CMAKE_INSTALL_PREFIX: ${CMAKE_INSTALL_PREFIX}")

SET(LWIP_SRC_DIR ${CMAKE_CURRENT_SOURCE_DIR}/src)
SET(LWIP_SRC_CORE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/src/core)
SET(LWIP_SRC_INCLUDE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/src/include)

set(LWIP_SRC
    ${LWIP_SRC_CORE_DIR}/def.c
    ${LWIP_SRC_CORE_DIR}/dns.c
    ${LWIP_SRC_CORE_DIR}/inet_chksum.c
    ${LWIP_SRC_CORE_DIR}/init.c
    ${LWIP_SRC_CORE_DIR}/ip.c
    ${LWIP_SRC_CORE_DIR}/mem.c
    ${LWIP_SRC_CORE_DIR}/memp.c
    ${LWIP_SRC_CORE_DIR}/netif.c
    ${LWIP_SRC_CORE_DIR}/pbuf.c
    # ${LWIP_SRC_CORE_DIR}/raw.c
    ${LWIP_SRC_CORE_DIR}/stats.c
    # ${LWIP_SRC_CORE_DIR}/sys.c
    ${LWIP_SRC_CORE_DIR}/tcp.c
    ${LWIP_SRC_CORE_DIR}/tcp_in.c
    ${LWIP_SRC_CORE_DIR}/tcp_out.c
    ${LWIP_SRC_CORE_DIR}/timeouts.c
    ${LWIP_SRC_CORE_DIR}/udp.c
    # ${LWIP_SRC_CORE_DIR}/ipv4/autoip.c
    # ${LWIP_SRC_CORE_DIR}/ipv4/dhcp.c
    # ${LWIP_SRC_CORE_DIR}/ipv4/etharp.c
    # ${LWIP_SRC_CORE_DIR}/ipv4/icmp.c
    # ${LWIP_SRC_CORE_DIR}/ipv4/igmp.c
    ${LWIP_SRC_CORE_DIR}/ipv4/ip4.c
    ${LWIP_SRC_CORE_DIR}/ipv4/ip4_addr.c
    ${LWIP_SRC_CORE_DIR}/ipv4/ip4_frag.c
    # ${LWIP_SRC_CORE_DIR}/ipv6/dhcp6.c
    # ${LWIP_SRC_CORE_DIR}/ipv6/ethip6.c
    ${LWIP_SRC_CORE_DIR}/ipv6/icmp6.c
    # ${LWIP_SRC_CORE_DIR}/ipv6/inet6.c
    ${LWIP_SRC_CORE_DIR}/ipv6/ip6.c
    ${LWIP_SRC_CORE_DIR}/ipv6/ip6_addr.c
    ${LWIP_SRC_CORE_DIR}/ipv6/ip6_frag.c
    # ${LWIP_SRC_CORE_DIR}/ipv6/mld6.c
    ${LWIP_SRC_CORE_DIR}/ipv6/nd6.c
    ${LWIP_SRC_CORE_DIR}/sys_custom.c)

set(LWIP_HDR
    ${LWIP_SRC_INCLUDE_DIR}/lwip/priv/tcp_priv.h
    ${LWIP_SRC_INCLUDE_DIR}/lwip/prot/dns.h
    # ${LWIP_SRC_INCLUDE_DIR}/lwip/prot/ip4.h
    # ${LWIP_SRC_INCLUDE_DIR}/lwip/prot/ip6.h
    # ${LWIP_SRC_INCLUDE_DIR}/lwip/prot/ip.h
    # ${LWIP_SRC_INCLUDE_DIR}/lwip/prot/tcp.h
    ${LWIP_SRC_INCLUDE_DIR}/lwip/prot/udp.h
    ${LWIP_SRC_INCLUDE_DIR}/lwip/dns.h
    ${LWIP_SRC_INCLUDE_DIR}/lwip/init.h
    ${LWIP_SRC_INCLUDE_DIR}/lwip/ip.h
    ${LWIP_SRC_INCLUDE_DIR}/lwip/ip4.h
    ${LWIP_SRC_INCLUDE_DIR}/lwip/ip4_addr.h
    ${LWIP_SRC_INCLUDE_DIR}/lwip/ip4_frag.h
    ${LWIP_SRC_INCLUDE_DIR}/lwip/ip_addr.h
    ${LWIP_SRC_INCLUDE_DIR}/lwip/netif.h
    ${LWIP_SRC_INCLUDE_DIR}/lwip/tcp.h
    ${LWIP_SRC_INCLUDE_DIR}/lwip/udp.h
    ${LWIP_SRC_INCLUDE_DIR}/lwip/timeouts.h)

SET(LWIP_INCLUDE_DIR 
    ${CMAKE_CURRENT_BINARY_DIR}/include)

file(COPY ${LWIP_SRC_INCLUDE_DIR} DESTINATION ${CMAKE_CURRENT_BINARY_DIR})

include_directories(BEFORE ${CMAKE_CURRENT_BINARY_DIR}/include)

add_library(${LIB_NAME} STATIC ${LWIP_HDR} ${LWIP_SRC})

install(TARGETS ${LIB_NAME}
        LIBRARY DESTINATION lib
        ARCHIVE DESTINATION lib)

